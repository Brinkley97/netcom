% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/align.R
\name{align}
\alias{align}
\title{Dynamic Network Alignment}
\usage{
align(matrix_1_input, matrix_2_input, input = "matrix", base = 2,
  characterization = "entropy", normalization = FALSE)
}
\arguments{
\item{matrix_1_input}{The first network being aligned, either as a matrix or linked list. If the two
networks are of different sizes, it will be easier to interpret the output if this is the smaller one.}

\item{matrix_2_input}{The second network. Should be the same type (matrix or linked list) as matrix_1_input.}

\item{base}{The base in the series of time steps to sample the diffusion kernels at. If base = 1 every time step
is sampled. If base = 2, only time steps that are powers of 2 are sampled, etc.}

\item{characterization}{Determines how the diffusion kernels are characterized. Either "entropy" or "Gini".}

\item{normalization}{Determines if self-loops should be augmented such that edge weights in network.1 and network.2 are
proportional to those in matrix.1.input and matrix.2.input. FALSE by default because this is innapropriate for
unweighted binary/logical networks where edges indicate only the presense of an interaction.}
}
\value{
A list containing 4 pieces:

Score = mean of all alignment scores between nodes in both original networks matrix_1_input and matrix_2_input.

Alignment = data frame of the nodes in both networks, sorted numerically by the first network (why it helps to make the smaller network the first one), and the corresponding alignment score

Score_with_Padding = same as Score but includes the padding nodes in the smaller network, which can be thought of as a size gap penalty for aligning differently sized networks

Alignment_with_Padding = same as Alignment but includes the padding nodes in the smaller network
}
\description{
Network alignment by comparing the entropies of diffusion kernels simulated on two networks.
Functions to take two networks, either matrices or linked lists, and return a node-level alignment between them.
}
\examples{
NetOne <- matrix(runif(25,0,1), nrow=5, ncol=5)
NetTwo <- matrix(runif(25,0,1), nrow=5, ncol=5)
NetCom(NetOne, NetTwo)
NetCom(NetOne, NetTwo, input = "matrix", base = 2, characterization = "entropy", normalization = FALSE)

}
